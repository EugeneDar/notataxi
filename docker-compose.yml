networks:
  orders-service-network:
    driver: bridge

services:
  orders_db:
    container_name: ${ORDERS_DB_HOST}
    image: postgres:16
    environment:
      POSTGRES_DB: ${ORDERS_DB_DB}
      POSTGRES_USER: ${ORDERS_DB_USER}
      POSTGRES_PASSWORD: ${ORDERS_DB_PASSWORD}
    volumes:
      - ./src/services/orders/database/data/:/var/lib/postgresql/data
      - ./src/services/orders/database/init_migrations:/docker-entrypoint-initdb.d
    networks:
      - orders-service-network
  
  orders_app:
    container_name: orders_app
    build:
      context: .
      dockerfile: src/services/orders/Dockerfile
    depends_on:
      - orders_db
    environment:
      POSTGRES_HOST: ${ORDERS_DB_HOST}
      POSTGRES_PORT: ${ORDERS_DB_PORT}
      POSTGRES_USER: ${ORDERS_DB_USER}
      POSTGRES_PASSWORD: ${ORDERS_DB_PASSWORD}
      POSTGRES_DB: ${ORDERS_DB_DB}
      ORDERS_SERVICE_PORT: ${ORDERS_SERVICE_PORT}
      TIME_ZONE: ${TIME_ZONE}
    ports:
      - ${ORDERS_SERVICE_PORT}:${ORDERS_SERVICE_PORT}
    networks:
      - orders-service-network

  sources_service:
    container_name: sources_app
    build:
      context: .
      dockerfile: src/services/sources/Dockerfile
    ports:
      - "9000:9000"
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    depends_on:
      - orders_db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - orders-service-network