// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: executor_profile.proto

package executor_profile

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ExecutorProfileServiceClient is the client API for ExecutorProfileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExecutorProfileServiceClient interface {
	GetExecutorProfile(ctx context.Context, in *ExecutorProfileRequest, opts ...grpc.CallOption) (*ExecutorProfileResponse, error)
}

type executorProfileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExecutorProfileServiceClient(cc grpc.ClientConnInterface) ExecutorProfileServiceClient {
	return &executorProfileServiceClient{cc}
}

func (c *executorProfileServiceClient) GetExecutorProfile(ctx context.Context, in *ExecutorProfileRequest, opts ...grpc.CallOption) (*ExecutorProfileResponse, error) {
	out := new(ExecutorProfileResponse)
	err := c.cc.Invoke(ctx, "/executor_profile.ExecutorProfileService/GetExecutorProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecutorProfileServiceServer is the server API for ExecutorProfileService service.
// All implementations must embed UnimplementedExecutorProfileServiceServer
// for forward compatibility
type ExecutorProfileServiceServer interface {
	GetExecutorProfile(context.Context, *ExecutorProfileRequest) (*ExecutorProfileResponse, error)
	mustEmbedUnimplementedExecutorProfileServiceServer()
}

// UnimplementedExecutorProfileServiceServer must be embedded to have forward compatible implementations.
type UnimplementedExecutorProfileServiceServer struct {
}

func (UnimplementedExecutorProfileServiceServer) GetExecutorProfile(context.Context, *ExecutorProfileRequest) (*ExecutorProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExecutorProfile not implemented")
}
func (UnimplementedExecutorProfileServiceServer) mustEmbedUnimplementedExecutorProfileServiceServer() {
}

// UnsafeExecutorProfileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExecutorProfileServiceServer will
// result in compilation errors.
type UnsafeExecutorProfileServiceServer interface {
	mustEmbedUnimplementedExecutorProfileServiceServer()
}

func RegisterExecutorProfileServiceServer(s grpc.ServiceRegistrar, srv ExecutorProfileServiceServer) {
	s.RegisterService(&ExecutorProfileService_ServiceDesc, srv)
}

func _ExecutorProfileService_GetExecutorProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecutorProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorProfileServiceServer).GetExecutorProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/executor_profile.ExecutorProfileService/GetExecutorProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorProfileServiceServer).GetExecutorProfile(ctx, req.(*ExecutorProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ExecutorProfileService_ServiceDesc is the grpc.ServiceDesc for ExecutorProfileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ExecutorProfileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "executor_profile.ExecutorProfileService",
	HandlerType: (*ExecutorProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetExecutorProfile",
			Handler:    _ExecutorProfileService_GetExecutorProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "executor_profile.proto",
}
